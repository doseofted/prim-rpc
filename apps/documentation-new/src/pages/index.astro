---
import { Code } from "astro/components"
import Layout from "@/layouts/Default.astro"
import { HomepageIntro } from "@/components/IntroText.react"
import { client } from "@/client"

const greeting = await client.greetings()

const serverCodeSnippet = `
// define on server:
export const sayHello = (x, y) => \`\${x}, meet \${y}.\`
sayHello.rpc = true
`
const clientCodeSnippet = `
// call on client:
const hello = await sayHello("Backend", "Frontend")
console.log(hello)
`
const snippets = [serverCodeSnippet, clientCodeSnippet].map(snippet => snippet.trim())
---

<Layout className="homepage-intro">
	<!-- Fancy home introduction -->
	<div class="min-h-[calc(100svh-6.5rem)] grid grid-cols-6 lg:grid-cols-12 grid-rows-[1fr_auto]">
		<div class="col-span-6 lg:col-span-12 flex flex-col gap-8 items-center justify-center">
			{
				snippets.map((snippet, index) => (
					<div
						class:list={index === 0 ? "md:translate-x-16 lg:translate-x-32" : "md:-translate-x-16 lg:-translate-x-32"}>
						<div class="homepage-snippets opacity-0 mockup-code text-sm bg-white/70 pb-4 w-full max-w-lg">
							<div class="px-4">
								<div class="rounded-lg overflow-hidden bg-prim-space code-without-bg">
									<Code code={snippet} lang="typescript" theme="material-theme-palenight" />
								</div>
							</div>
						</div>
					</div>
				))
			}
		</div>
		<div class="col-span-6 lg:col-span-12 pb-12">
			<p
				class="font-title text-[2.3rem] sm:text-[3rem] lg:text-[5.5rem] font-semibold text-white uppercase text-right leading-none overflow-hidden">
				<HomepageIntro client:load text={greeting.split("\n")} />
			</p>
		</div>
	</div>
	<!-- Below the fold -->
	<div class="grid grid-cols-6 lg:grid-cols-12 py-8">
		<div class="col-span-12 lg:col-span-6 text-white space-y-4">
			<p class="font-title text-xl sm:text-2xl lg:text-4xl font-semibold uppercase leading-none">
				RPC for the Rest&nbsp;of&nbsp;Us.
			</p>
			<p class="text-sm lg:text-base">
				Prim+RPC bridges incompatible JavaScript environments. Call a JavaScript function on the server remotely as if
				it was defined on the client itself.
			</p>
		</div>
	</div>
</Layout>

<script src="@/utils/lenis"></script>

<script>
	import { $navigationHappened } from "@/utils/store"
	import { animate, stagger } from "motion"

	const startDefault = 1.8
	function introAnimation(start = startDefault) {
		const codeSnippets = document.querySelectorAll(".homepage-snippets")
		const navigationElem = document.querySelectorAll(".prim-navigation")
		const slideIn = {
			y: ["3rem", "0rem"],
			opacity: [0, 1],
		}
		animate(codeSnippets, slideIn, { delay: stagger(0.2, { start, from: "last" }), duration: 0.9 })
		// navigation only needs to be animated on first load
		if (start === startDefault) {
			animate(navigationElem, slideIn, { delay: start + 0.4, duration: 0.9 })
		} else {
			document.body.classList.remove("homepage-intro")
		}
	}
	document.addEventListener("astro:after-swap", () => {
		if (location.pathname !== "/") return
		introAnimation(0)
	})
	introAnimation($navigationHappened.value ? 0 : startDefault)
</script>

<style is:global>
	/* These elements are animated and should be moved to starting positions */
	body.homepage-intro {
		.prim-navigation {
			opacity: 0;
		}
	}

	/* Use theme color for code background */
	.code-without-bg pre {
		background-color: transparent !important;
		padding: theme("padding.3") theme("padding.5");
	}

	/* Theme psuedo elements to match website */
	.mockup-code {
		&::before {
			box-shadow:
				1.4em 0 0 theme("colors.prim.space"),
				2.8em 0 0 theme("colors.prim.space"),
				4.2em 0 0 theme("colors.prim.space") !important;
		}

		pre::before {
			content: none !important;
		}
	}
</style>
