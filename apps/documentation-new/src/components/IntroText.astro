---
interface Props {
	text: string | string[]
}
const { text } = Astro.props
const textList = typeof text === "string" ? [text] : text
---

<prim-intro-text>
	{
		textList.map((text, index) => {
			return (
				<>
					<span class="inline-block overflow-hidden">
						<span class="transition-text inline-block" style={{ opacity: 0 }}>
							{text}
						</span>
					</span>
					{index !== textList.length - 1 ? <br /> : null}
				</>
			)
		})
	}
</prim-intro-text>

<script>
	import { animate, stagger } from "motion"
	/** https://easings.net/#easeOutCirc */
	function easeOutCirc(x: number): number {
		return Math.sqrt(1 - Math.pow(x - 1, 2))
	}

	class PrimIntroText extends HTMLElement {
		constructor(public text: NodeListOf<HTMLSpanElement>) {
			super()
			text = this.querySelectorAll(".transition-text")
			if (text) {
				animate(
					text,
					{
						y: ["100%", "0%"],
						opacity: [0.3, 1],
					},
					{ duration: 0.6, delay: stagger(0.9, { start: 1.3 }), easing: easeOutCirc }
				)
			}
		}
	}
	customElements.define("prim-intro-text", PrimIntroText)
</script>
