---
import { Icon } from "astro-icon/components"
interface Props {
	/** A single filepath, separated by "/" */
	filename?: string
	/** A filename/path. The index of the tab item refers to the index of the child pane provided in the slot. */
	tabs?: string[]
	overrideClass?: string
	/** "astro" is generally used in components, "rehype" always from mdx (the default) */
	codeProvider?: "astro" | "rehype"
}
const { filename, tabs = [], overrideClass, codeProvider = "rehype" } = Astro.props

const iconMapping = {
	npm: "simple-icons:npm",
	yarn: "simple-icons:yarn",
	deno: "simple-icons:deno",
	bun: "simple-icons:bun",
}
---

<div class:list={["not-prose flex flex-col rounded-xl w-full overflow-hidden", overrideClass]}>
	{
		filename && (
			<div class="bg-prim-space/90 text-sm breadcrumbs text-white border-b border-white/20 px-5">
				<ul>
					{filename.split("/").map((part, index, parts) => (
						<li class="space-x-2">
							<Icon
								class="w-4 h-4 inline-block"
								name={index !== parts.length - 1 ? "ph:folder-bold" : "ph:file-bold"}
							/>
							<span>{part}</span>
						</li>
					))}
				</ul>
			</div>
		)
	}
	{
		tabs.length > 0 && (
			<ul class="tabs bg-prim-space/90 text-sm">
				{tabs.map(tab => (
					<li class="tab tab-bordered text-white">{tab}</li>
				))}
			</ul>
		)
	}
	<div
		class="flex-grow bg-prim-space"
		class:list={codeProvider === "astro" ? "site-code-style" : "text-sm py-3 px-5 rounded-b-xl"}>
		<slot />
	</div>
</div>

<script>
	import autoAnimate from "@formkit/auto-animate"
</script>
