---
import Documentation from "@/layouts/Documentation.astro"
import { getCollection } from "astro:content"

interface Props {
	entry: Awaited<ReturnType<typeof getCollection<"docs">>>[number]
	tableOfContents: {
		name: string
		sections: {
			name: string
			link: string
		}[]
	}[]
}
export async function getStaticPaths() {
	const documentation = await getCollection("docs")
	const tableOfContents = documentation.map(doc => ({ ...doc.data, slug: doc.slug }))
	console.log({ tableOfContents })
	return documentation.map(entry => {
		const { slug } = entry
		return { params: { slug }, props: { entry, tableOfContents } }
	})
}
const { entry, tableOfContents: tableOfContentsNew } = Astro.props
const { Content } = await entry.render()

// NOTE: manual list probably to be replaced with Astro's generated collections
const tableOfContents = [
	{
		name: "Library Usage",
		sections: [
			{ name: "Introduction", link: "/docs/v0/usage" },
			{ name: "Get Started", link: "/docs/v0/usage/setup" },
			{ name: "How to Use", link: "/docs/v0/usage/features" },
			{ name: "Examples", link: "/docs/v0/usage/examples" },
			{ name: "Security", link: "/docs/v0/usage/security" },
			{ name: "Limitations", link: "/docs/v0/usage/limitations" },
		],
	},
	{
		name: "Reference",
		sections: [
			{ name: "Configuration", link: "/docs/v0/configuration" },
			{ name: "RPC Structure", link: "/docs/v0/structure" },
			{ name: "Additional Tools", link: "/docs/v0/tooling" },
			{ name: "Comparisons", link: "/docs/v0/comparisons" },
		],
	},
	{
		name: "Integrations",
		sections: [
			{ name: "Server Plugins", link: "/docs/v0/server-plugins" },
			{ name: "Client Plugins", link: "/docs/v0/client-plugins" },
			{ name: "IPC Plugins", link: "/docs/v0/ipc-plugins" },
			{ name: "Create Your Own", link: "/docs/v0/create-plugin" },
		],
	},
]
---

<Documentation decorationText="The Docs." title={entry.data.title} tableOfContents={tableOfContents}>
	<Content />
</Documentation>
