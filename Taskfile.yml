version: "3"

dotenv:
  - ".env"

tasks:
  default:
    cmds:
      - "task --list"

  setup:node:
    desc: "Set the version of Node using pnpm, as specified in project's .nvmrc"
    vars:
      given_node_version:
        sh: "cat .nvmrc"
    cmds:
      - "pnpm env use --global {{.given_node_version}}"

  setup:
    desc: "Set up the project for development"
    cmds:
      - "pnpm install"
      - task: build

  upgrade:
    desc: "Interactively upgrade all dependencies in monorepo"
    cmds:
      - "pnpm upgrade -r --interactive --latest"

  audit:fix:
    cmds:
      - "pnpm audit --fix"
    prompt: "Do you want to update dependencies to address audit?"

  audit:
    desc: "Audit for vulnerabilities"
    ignore_error: true
    cmds:
      - "pnpm audit"
      - task: audit:fix


  cleanup:
    desc: "Remove various temporary files and directories created within project, for a clean run"
    ignore_error: true
    cmds:
      - "find . -name node_modules -type d -prune -exec rm -fr {} +"
      - 'find . -name dist -not -path "*/shiki/dist" -type d -prune -exec rm -fr {} +'
      - "find . -name .turbo -type d -prune -exec rm -fr {} +"
      - "rm -r ./apps/documentation/.astro/"
      - "rm -r ./apps/documentation/.vercel/"
      - "rm -fr .task"

  build:
    desc: "Build all parts of the project"
    cmds:
      - "pnpm turbo build"

  test:
    desc: "Run all project tests"
    cmds:
      - "pnpm turbo test"

  changeset:
    desc: "Add a changeset to a commit"
    cmds:
      - "pnpm changeset {{.CLI_ARGS}}"

  lint:check:
    desc: "Check for linting errors in project (ran prior to lint:fix task)"
    cmds:
      - cmd: "pnpm prettier . --check"
        ignore_error: true
      - cmd: "pnpm turbo run lint"
        ignore_error: true

  lint:fix:
    desc: "Lint project with ESLint and format with Prettier"
    cmds:
      - "pnpm prettier . --write"
      - "pnpm turbo run lint -- --fix"

  start:docs:
    desc: "Start the documentation server in development mode"
    cmds:
      - "pnpm --filter=./apps/documentation dev --host"

  start:example:
    desc: "Start the reference project to play with Prim+RPC on a server"
    cmds:
      - "pnpm --filter=./apps/example dev"
