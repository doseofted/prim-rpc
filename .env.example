# SECTION: Basics
# -----------------------------------------------------------------------------
# Used for reverse proxy and containers that need to know the hostname
HOST="prim.localhost"
# Host where logs collected by fluentbit should be sent
# (through private network only, to Loki)
METRICS_COLLECTION_HOST=
PROJECT_VERSION=
# !SECTION ---------------------------------------------------------------------


# SECTION: Database
# -----------------------------------------------------------------------------
POSTGRES_PASSWORD=
# !SECTION ---------------------------------------------------------------------


# SECTION: Automated messaging
# ------------------------------------------------------------------------------
# AWS SES service. Configured by creating a new identity for the domain then
# configuring an IAM user for SMTP through the SES dashboard homepage (yikes).
SES_SMTP_USER=
SES_SMTP_PASS=
SES_SMTP_HOST="email-smtp.us-east-2.amazonaws.com"
SES_FROM_ADDR="automated@noreply.dose.host"
#
# Telegram notifications (use Botfather to generate new bots)
TELEGRAM_BOT_TOKEN=
# Comma-delimited list of users authorized to receive messages
# Get chat ID from: https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getUpdates
TELEGRAM_CHAT_ID_LIST=
# !SECTION ---------------------------------------------------------------------


# SECTION: Docker Compose configuration
# ------------------------------------------------------------------------------
# LINK https://docs.docker.com/compose/reference/envvars/
COMPOSE_PROJECT_NAME="prim"
COMPOSE_PATH_SEPARATOR=","
# Compose configuration used in development. Set in Taskfile during builds for
# staging and production.
COMPOSE_FILE="docker-compose.yml,docker-compose.dev.yml"
COMPOSE_FILE_DEV="docker-compose.yml,docker-compose.dev.yml"
COMPOSE_FILE_PROD="docker-compose.yml,docker-compose.prod.yml"
# Add "monitoring" profile to enable fluentbit and nodeexporter
COMPOSE_PROFILES=
# !SECTION ---------------------------------------------------------------------


# SECTION: Development DNS Server
# ------------------------------------------------------------------------------
# Address for which DNS server should bind (for development, if needed)
# Run the following and populate variable below with result:
# $ hostname -I | awk '{print $1}'
DNS_BIND=
# TLD to use for development DNS server (usually "*.test")
DNS_TLD="test"
# !SECTION ---------------------------------------------------------------------
