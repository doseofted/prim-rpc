# SECTION: Basics
# -----------------------------------------------------------------------------
#
# Docker Compose configuration key, used with `dc` function 
# defined in and sourced by "source.sh"
COMPOSE_ENV="development"
# Used for reverse proxy and containers that need to know the hostname
COMPOSE_HOST="prim.localhost"
# Host where logs collected by fluentbit should be sent
# (through private network only, to Loki)
METRICS_COLLECTION_HOST=""
#
# !SECTION: Basics
# -----------------------------------------------------------------------------


# SECTION: Docker Compose configuration
# -----------------------------------------------------------------------------
#
# NOTE: Uncomment needed configuration below. If $COMPOSE_PROD is used,
# it takes priority over all other configurations. See use in Taskfile.yml.
#
# Development:
COMPOSE_DEV="-f docker-compose.yml -f libraries/compose.yml -f docker-compose.dev.yml"
# Production:
# COMPOSE_PROD="-f docker-compose.yml -f libraries/compose.yml -f misc/dc.logging.yml -f docker-compose.prod.yml"
#
# !SECTION: Docker Compose configuration
# -----------------------------------------------------------------------------


# SECTION: Database
# -----------------------------------------------------------------------------
#
POSTGRES_PASSWORD=""
#
# !SECTION: Database
# -----------------------------------------------------------------------------


# SECTION: Automated messaging
# -----------------------------------------------------------------------------
#
# AWS SES service. Configured by creating a new identity for the domain then
# configuring an IAM user for SMTP through the SES dashboard homepage (yikes).
SES_SMTP_USER=""
SES_SMTP_PASS=""
SES_SMTP_HOST="email-smtp.us-east-2.amazonaws.com"
SES_FROM_ADDR="automated@noreply.dose.host"
#
# Telegram notifications (use Botfather to generate new bots)
TELEGRAM_BOT_TOKEN=""
#
# Comma-delimited list of users authorized to receive messages
# Get chat ID from: https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getUpdates
TELEGRAM_CHAT_ID_LIST=""
#
# !SECTION: Automated messaging
# -----------------------------------------------------------------------------


# SECTION: Development DNS Server
# -----------------------------------------------------------------------------
#
# Address for which DNS server should bind (for development, if needed)
# Run the following and populate variable below with result:
# $ hostname -I | awk '{print $1}'
DNS_BIND="0.0.0.0"
# TLD to use for development DNS server (usually "*.test")
DNS_TLD="test"
#
# !SECTION: Development DNS Server
# -----------------------------------------------------------------------------
